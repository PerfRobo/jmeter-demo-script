<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.jmeter.demo</groupId>
    <artifactId>jmeter-demo-script</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--<parent>-->
    <!--<groupId>com.afklm.maven.pom</groupId>-->
    <!--<artifactId>kl-projects-pom</artifactId>-->
    <!--<version>3.1.6</version>-->
    <!--</parent>-->
    <properties>
        <encoding>UTF-8</encoding>
        <maven.build.timestamp.format>yyyyMMdd_HHmm</maven.build.timestamp.format>
        <!-- Settings for targets-io dashboard -->
        <application.name>JMETER</application.name>
        <application.version>1.0</application.version>
        <!-- Default test environment  -->
        <activeEnvironment>local</activeEnvironment>
        <!-- targets-io host -->
        <targetsioHost>targetsio</targetsioHost>
        <targetsioPort>3000</targetsioPort>
        <!-- graphite host -->
        <graphiteHost>graphite</graphiteHost>
        <!-- Default Graphite prefix -->
        <graphitePrefix>jmeter.${application.name}.</graphitePrefix>
        <!-- By default Jenkins build Url is used -->
        <buildResultKey>${BUILD_URL}</buildResultKey>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>com.lazerycode.jmeter</groupId>
                <artifactId>jmeter-maven-plugin</artifactId>
                <version>1.10.1</version>
                <executions>
                    <execution>
                        <id>jmeter-tests</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jmeter</goal>
                        </goals>
                        <configuration>
                            <jMeterProcessJVMSettings>
                                <xms>1024</xms>
                                <xmx>1024</xmx>
                            </jMeterProcessJVMSettings>
                            <propertiesUser>
                                <productName>${application.name}</productName>
                                <dashboardName>${dashboardName}</dashboardName>
                                <buildResultKey>${buildResultKey}</buildResultKey>
                                <testRunId>${testRunId}</testRunId>
                                <graphitePrefix>${graphitePrefix}</graphitePrefix>
                                <threads>${threads}</threads>
                                <rampUp>${rampUp}</rampUp>
                                <loopCount>${loopCount}</loopCount>
                                <host>${host}</host>
                                <port>${port}</port>
                                <targetsioHost>${targetsioHost}</targetsioHost>
                                <targetsioPort>${targetsioPort}</targetsioPort>
                                <graphiteHost>${graphiteHost}</graphiteHost>
                            </propertiesUser>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>kg.apc</groupId>
                        <artifactId>jmeter-plugins</artifactId>
                        <version>1.0.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-math3</artifactId>
                        <version>3.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-pool2</artifactId>
                        <version>2.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- ************************************************************************ ==
          == Below we have defined two sets of profiles, which control the type of    ==
          == test that will be run and the targeted environment. By default, this     ==
          == project runs a load test on the local environment. If you wish to run a  ==
          == stress test on AE1, you can activate the stress and ae1 profiles:        ==
          ==                                                                          ==
          == mvn gatling:execute -Pstress -Pae1                                       ==
          == ************************************************************************ -->
        <!-- Test Profiles -->
        <profile>
            <id>stress</id>
            <activation/>
            <properties>
                <activeProfileId>stress</activeProfileId>
                <dashboardId>STRESS</dashboardId>
                <testRunId>${application.name}-${application.version}-${activeProfileId}-${maven.build.timestamp}</testRunId>
            </properties>
        </profile>
        <profile>
            <id>load</id>
            <activation/>
            <properties>
                <activeProfileId>load</activeProfileId>
                <dashboardId>LOAD</dashboardId>
                <testRunId>${application.name}-${application.version}-${activeProfileId}-${maven.build.timestamp}</testRunId>
            </properties>
        </profile>
        <profile>
            <id>endurance</id>
            <activation/>
            <properties>
                <activeProfileId>endurance</activeProfileId>
                <dashboardId>ENDURANCE</dashboardId>
                <testRunId>${application.name}-${application.version}-${activeProfileId}-${maven.build.timestamp}</testRunId>
            </properties>
        </profile>
        <profile>
            <id>failover</id>
            <activation/>
            <properties>
                <activeProfileId>failover</activeProfileId>
                <dashboardId>FAILOVER</dashboardId>
                <testRunId>${application.name}-${application.version}-${activeProfileId}-${maven.build.timestamp}</testRunId>
            </properties>
        </profile>
        <profile>
            <id>demo</id>
            <activation/>
            <properties>
                <threads>10</threads>
                <rampUp>300</rampUp>
                <loopCount>300</loopCount>
                <dashboardName>LOAD</dashboardName>
                <testRunId>${application.name}-${application.version}-${activeProfileId}-${maven.build.timestamp}</testRunId>
            </properties>
        </profile>
        <profile>
            <id>nightly</id>
            <activation/>
            <properties>
                <activeProfileId>nightly</activeProfileId>
                <dashboardId>NIGHTLY</dashboardId>
                <buildResultKey>${bamboo.buildResultsUrl}</buildResultKey>
                <testRunId>${application.name}-${application.version}-${maven.build.timestamp}</testRunId>
                <graphitePrefix>gatling2.nightly</graphitePrefix>
            </properties>
        </profile>
        <!-- Test Environments -->
        <profile>
            <id>tst</id>
            <activation/>
            <properties>
                <host>dropwizard</host>
                <port>8080</port>
            </properties>
        </profile>
        <profile>
            <id>acc</id>
            <activation/>
            <properties>
                <host>dropwizard</host>
                <port>8080</port>
            </properties>
        </profile>
    </profiles>
</project>
